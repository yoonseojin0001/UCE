#
UCE에서 다룬대로 처음 제 생각은 artist erasure에 대한 분석 이후 object erasure, debias, moderate 순서대로 분석해 나가려고 했습니다. 다만, artist erasure에 대한 여러 가지 의문이 있어서 관련된 실험을 이어나가고 있습니다.

#
일단 제가 이런 식으로 연구해보는 것도 처음이고 관련 지식의 공백이 있어서 다소 무의미하거나 이미 행해진 연구를 다시 진행하고 있을 수 있음을 밝힙니다. 또한, artist erasure에 대한 생각을 말씀 드리기 전에 진행한 사소한 작업에 대해서도 언급하도록 하겠습니다.

#
먼저, 제가 한 일은 UCE 논문의 수식을 나름대로 검증해 본 것이였습니다. 논문에서는 사실상 행렬을 행렬로 미분하는 작업을 하였고 수식에서도 행렬의 norm을 벡터의 norm처럼 사용했는데 이것이 왜 가능한 것인지 또 제대로 이해한 것이 맞는지 확인하기 위해서 많은 시간을 사용했습니다. 유감스럽게도 이 부분에 대해서는 아직도 확신이 없습니다.
그리고 나서 UCE 논문의 코드를 참조해서 코드를 구현해냈습니다. UCE 코드에서 비효율적이고 이상한 부분이 워낙 많았어서 코드를 직접 참조했음에도 배낀 것 같은 느낌이 들진 않았습니다. 또한, 이 코드로 직접 실험을 해보려고 했더니 여러가지 에로사항이 많다는 것을 발견했습니다. 아마도 gpu의 vram 부족으로 인한 문제인 것 같긴 한데 실험을 할 때마다 코드 돌아가는 속도가 다르게 나왔습니다. ipynb에서 연속적으로 코드를 돌리게 되면 cuda.empty_cache를 하더라도 수행에 문제가 없어야 하는 코드가 끝이 나지 않는 모습을 종종 확인할 수 있었습니다. 따라서 각 셀마다 개별적으로 사용될 수 있도록 만들었습니다. 각 셀 위에는 라이브러리를 불러 오는 부분이 있고 erase process가 있는 셀이라면 마지막에 erase된 unet parameter를 저장합니다. 그럼 재시작을 하고 다음 셀에서 저장된 가중치를 불러오는 것에서 시작하여 이미지를 생성하는 방식입니다.
또한, 도중에 모든 실험 기록을 재구현할 수 있게 하려고 각 실험마다 사용되는 시드나 하이퍼파라미터, 이미지를 전부 저장하는 방식으로 코드를 생성했는데, 각 실험마다 겹치는 요소가 너무 많고 창의적인 실험을 방해하고 시간을 너무 소모하는 것 같아서 포기했습니다. 사실 이 부분도 경험이 없어서 그런건데 그냥 처음부터 막 실험을 하고 중요한 결과가 나왔을 때 재구성 가능하게 만들어야 했습니다.
이후에는 한 이미지당 35초씩 걸려서 생성하는 SD model로는 실험을 도저히 할 수가 없어서 mixed precision 방식을 채택했습니다. 사실 erase 같은 경우는 앞서 말한 gpu에 문제가 될 정도로 많은 retain prompt를 사용하는 것이 아닌한 5분 이내의 시간에 진행할 수 있습니다. 게다가 역행렬 계산이 있기 때문에 전부 float32로 계산하고 가중치를 저장했습니다. 그리고 문제가 되는 이미지 생성 과정에서 float16으로 불러와서 사용했습니다. 16을 사용할 때와 32를 사용할 때 큰 차이가 발생하면 안 된다고 생각해서 두 가지를 비교하는 실험도 여러 가지 했는데 CLIP이나 LPIPS 상에서 아주 작은 차이를 보여서 문제가 없음을 확인했습니다. timestep도 줄일 수 있으면 좋을 것 같았지만 이 경우 지표 차이가 작게나마 존재해서 보류했습니다. 그 결과 이미지 생성은 12초 정도 걸립니다.

#
이제 artist erasure인데 먼저 어떤 프롬프트를 활용하는 것이 옳은가에 대해서 생각해 보았습니다. 논문의 가장 기본적인 코드는 아티스트의 이름을 사용했는데 생성된 이미지를 확인해 본 결과 아티스트 스타일과 관련 없는 정보가 담긴 경우가 있음을 확인했습니다. 예를 들어 파블로 피카소는 아티스트 이름으로 이미지를 생성하면 그림보다 피카소의 사실적인 초상화가 생성되었는데 이러한 부분이 옳은 실험 결과를 방해할 수 있다는 생각이 들었습니다. 만약 어떤 물체에 대한 개념 예를 들어 스누피를 제거한다고 하면 스누피 자체를 제거하는 것만이 목표겠지만 아티스트 스타일을 제거한다고 하면 아티스트 자체를 제거하는 것이 다른 결과를 불러올 수 있습니다. 일차적으로 삭제의 효과를 확인하는 점수가 CLIP인데 아티스트 스타일의 제거로 인해 점수가 차이나는 것인지 다른 요소가 존재하고 해당 요소가 제거되어 점수가 차이나는지 알 수 없습니다. 이 부분에서 문제가 없더라도 아티스트 스타일 외의 요소가 강하게 존재하는 아티스트와 그렇지 않은 아티스트의 제거에 대한 영향은 존재할 수 밖에 없습니다.
